Final?

superstack/
├── ai/                       # All things AI logic and context
│   ├── contexts/             # MCP-compatible context modules
│   │   ├── rag/              # Domain folder example
│   │   │   ├── module.md     # Follows the context-module-scheme.json schema
│   │   │   ├── metadata.json # Properties including version, dependencies, token count
│   │   │   └── index.json    # List of all modules in this domain with their purposes
│   │   └── prompt-engineering/ 
│   │       ├── promptfoo.md
│   │       ├── promptfoo.json
│   │       └── index.json
│   ├── prompts/              # Prompt templates
│   ├── evals/                # Evaluation tasks + golden set
│   ├── feedback/             # Raw logs + structured results
│   ├── schemas/              # Module + context .json schemas
│   │   └── context-module-scheme.json  # Example of a context in action
│   ├── tests/                # Tests for the contexts
│   └── registry.json         # Registry of all contexts
│
├── knowledge/                # Personal knowledge base - human readable, long form content
│   ├── docs/                 # Finalized or shared documentation
│   │   ├── architecture.md   # System architecture documentation
│   │   ├── setup.md          # Setup instructions
│   │   └── api.md            # API documentation
│   ├── guides/               # Technical guides, concept breakdowns
│   ├── study/                # Flashcards, study notes
│   ├── patterns/             # Best practices + anti-patterns
│   ├── decisions/            # ADRs, tradeoffs, system-level calls
│   ├── roadmap/
│   └── insights/             # Self-written insights, "aha" moments
│
├── workflows/                # Execution and process layer
│   ├── checklists/           # Tactical checklists (e.g., module QA, release steps)
│   ├── templates/            # Markdown + JSON templates
│   ├── logs/                 # Work logs, coding sessions
│   └── retros/               # Retrospectives
│
├── tools/                    # Scripts, automation, CLI
│   ├── context/              # Module formatting, scoring, token tools
│   ├── dsp/                  # DSPy-specific optimizers or bridges
│   ├── cli/                  # Custom CLI interface
│   ├── anki/                 # Flashcard to CSV generator
│   └── utils/                # General-purpose helpers
│
├── config/                   # System, model, and tool configuration
│   ├── llm/                  # GPT, Claude, Cursor config
│   ├── dsp/                  # DSPy configuration
│   ├── cli/                  # CLI configuration
│   └── obsidian/             # Obsidian workspace config (optional)
│ 
├── lib/                      # Reusable code modules
├── tests/                    # Testing logic for tools/modules
├── .github/                  # GitHub workflows, issues, templates
└── examples/                 # Usage examples
    ├── context-injection/    # How to use modules with AI
    │   ├── using-gpt.md
    │   └── using-claude.md
    ├── workflows/
    │   ├── new-project.md    # CLI + logging + context flow
    │   └── ai-refactor.md
    └── templates/
        └── custom-template.md # How to create a new template